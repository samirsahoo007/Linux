Networking questions:
I used seats in the room. 
The classroom has an address. So, if someone wanted to come and talk to one of the students they would come down the hall and into my room. 
But, that only gets them to the room (server). They need to talk to a specific person, so they go to seat 17 so they can talk to Bob. 
So Bob's socket is room.123:17. 
I tried once to continue and the floor became cable runs, each hallway was a subnet, the corners were routers, and the school map was DNS. That pushed it a little too far :)
Did find though that most kids had at least a passing understanding of ports. Most of them had opened ports on their home routers to play games over the internet. 
http://www.steves-internet-guide.com/tcpip-ports-sockets/
On a TCP/IP network every device must have an IP address.
The IP address identifies the device e.g. computer.
However an IP address alone is not sufficient for running network applications, as a computer can run multiple applications and/or services.
Just as the IP address identifies the computer, The network port identifies the application or service running on the computer.
IP Address + Port = Socket
A connection between two computers uses a socket. A socket is the combination of IP address plus port.
Example:
Imagine sitting on your PC at home, and you have two browser windows open.
One looking at the Google website, and the other at the Yahoo website.
The connection to Google would be:
Your PC – IP1+port 60200 ——– Google IP2 +port 80 (standard port)
The combination IP1+60200 = the socket on the client computer and IP2 + port 80 = destination socket on the Google server.
The connection to Yahoo would be:
your PC – IP1+port 60401 ——–Yahoo IP3 +port 80 (standard port)
The combination IP1+60401 = the socket on the client computer and IP3 + port 80 = destination socket on the Yahoo server.
Notes: IP1 is the IP address of your PC. Client port numbers are dynamically assigned, and can be reused once the session is closed.

traceroute
traceroute is a network troubleshooting utility which shows number of hops taken to reach destination also determine packets traveling path. Below we are tracing route to global DNS server IP Address and able to reach destination also shows path of that packet is traveling.
# traceroute 4.2.2.2
traceroute to 4.2.2.2 (4.2.2.2), 30 hops max, 60 byte packets
1  192.168.50.1 (192.168.50.1)  0.217 ms  0.624 ms  0.133 ms
2  227.18.106.27.mysipl.com (27.106.18.227)  2.343 ms  1.910 ms  1.799 ms
3  221-231-119-111.mysipl.com (111.119.231.221)  4.334 ms  4.001 ms  5.619 ms
4  10.0.0.5 (10.0.0.5)  5.386 ms  6.490 ms  6.224 ms
5  gi0-0-0.dgw1.bom2.pacific.net.in (203.123.129.25)  7.798 ms  7.614 ms  7.378 ms
6  115.113.165.49.static-mumbai.vsnl.net.in (115.113.165.49)  10.852 ms  5.389 ms  4.322 ms
7  ix-0-100.tcore1.MLV-Mumbai.as6453.net (180.87.38.5)  5.836 ms  5.590 ms  5.503 ms
8  if-9-5.tcore1.WYN-Marseille.as6453.net (80.231.217.17)  216.909 ms  198.864 ms  201.737 ms
9  if-2-2.tcore2.WYN-Marseille.as6453.net (80.231.217.2)  203.305 ms  203.141 ms  202.888 ms
10  if-5-2.tcore1.WV6-Madrid.as6453.net (80.231.200.6)  200.552 ms  202.463 ms  202.222 ms
11  if-8-2.tcore2.SV8-Highbridge.as6453.net (80.231.91.26)  205.446 ms  215.885 ms  202.867 ms
12  if-2-2.tcore1.SV8-Highbridge.as6453.net (80.231.139.2)  202.675 ms  201.540 ms  203.972 ms
13  if-6-2.tcore1.NJY-Newark.as6453.net (80.231.138.18)  203.732 ms  203.496 ms  202.951 ms
14  if-2-2.tcore2.NJY-Newark.as6453.net (66.198.70.2)  203.858 ms  203.373 ms  203.208 ms
15  66.198.111.26 (66.198.111.26)  201.093 ms 63.243.128.25 (63.243.128.25)  206.597 ms 66.198.111.26 (66.198.111.26)  204.178 ms
16  ae9.edge1.NewYork.Level3.net (4.68.62.185)  205.960 ms  205.740 ms  205.487 ms
17  vlan51.ebr1.NewYork2.Level3.net (4.69.138.222)  203.867 ms vlan52.ebr2.NewYork2.Level3.net (4.69.138.254)  202.850 ms vlan51.ebr1.NewYork2.Level3.net (4.69.138.222)  202.351 ms
18  ae-6-6.ebr2.NewYork1.Level3.net (4.69.141.21)  201.771 ms  201.185 ms  201.120 ms
19  ae-81-81.csw3.NewYork1.Level3.net (4.69.134.74)  202.407 ms  201.479 ms ae-92-92.csw4.NewYork1.Level3.net (4.69.148.46)  208.145 ms
20  ae-2-70.edge2.NewYork1.Level3.net (4.69.155.80)  200.572 ms ae-4-90.edge2.NewYork1.Level3.net (4.69.155.208)  200.402 ms ae-1-60.edge2.NewYork1.Level3.net (4.69.155.16)  203.573 ms
21  b.resolvers.Level3.net (4.2.2.2)  199.725 ms  199.190 ms  202.488 ms

tracepath
Similar to traceroute but doesn't require root privileges.
dig
Dig (domain information groper) query DNS related information like A Record, CNAME, MX Record etc. This command mainly use to troubleshoot DNS related query.
# dig www.tecmint.com; <<>> DiG 9.8.2rc1-RedHat-9.8.2-0.10.rc1.el6 <<>> www.tecmint.com
;; global options: +cmd
;; Got answer:
;; ->>HEADER<

ROUTE Command
route command also shows and manipulate ip routing table. To see default routing table in Linux, type the following command.
# route
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
192.168.50.0    *               255.255.255.0   U     0      0        0 eth0
link-local      *               255.255.0.0     U     1002   0        0 eth0
default         192.168.50.1    0.0.0.0         UG    0      0        0 eth0
Adding, deleting routes and default Gateway with following commands.
Route Adding
# route add -net 10.10.10.0/24 gw 192.168.0.1
Route Deleting
# route del -net 10.10.10.0/24 gw 192.168.0.1
Adding default Gateway
# route add default gw 192.168.0.1

HOST Command
host command to find name to IP or IP to name in IPv4 or IPv6 and also query DNS records.
# host www.google.com
www.google.com has address 173.194.38.180
www.google.com has address 173.194.38.176
www.google.com has address 173.194.38.177
www.google.com has address 173.194.38.178
www.google.com has address 173.194.38.179
www.google.com has IPv6 address 2404:6800:4003:802::1014
Using -t option we can find out DNS Resource Records like CNAME, NS, MX, SOA etc.
# host -t CNAME www.redhat.com
www.redhat.com is an alias for wildcard.redhat.com.edgekey.net.

ARP Command
ARP (Address Resolution Protocol) is useful to view / add the contents of the kernel’s ARP tables. To see default table use the command as.
# arp -e
Address                  HWtype  HWaddress           Flags Mask            Iface
192.168.50.1             ether   00:50:56:c0:00:08   C                     eth0


telnet
telnet connect destination host:port via a telnet protocol if connection establishes means connectivity between two hosts is working fine.
[root@localhost ~]# telnet geekflare.com 443
Trying 162.159.244.243...
Connected to geekflare.com.
Escape character is '^]'.

nslookup
nslookup is a program to query Internet domain name servers.
[root@localhost ~]# nslookup geekflare.com
Server:                        172.16.179.2
Address:         172.16.179.2#53 
Non-authoritative answer:
Name: geekflare.com
Address: 162.159.243.243
Name: geekflare.com
Address: 162.159.244.243
[root@localhost ~]#

netstat
Netstat command allows you a simple way to review each of your network connections and open sockets. netstat with head output is very helpful while performing web server troubleshooting.
[root@localhost ~]# netstat
Active Internet connections (w/o servers)
Proto Recv-Q Send-Q Local Address           Foreign Address        State    
tcp       0     0 172.16.179.135:58856   mirror.comp.nus.ed:http TIME_WAIT
tcp       0     0 172.16.179.135:34444   riksun.riken.go.jp:http ESTABLISHED
tcp       0     0 172.16.179.135:37948   mirrors.isu.net.sa:http TIME_WAIT
tcp       0     0 172.16.179.135:53128   ossm.utm.my:http       TIME_WAIT
tcp       0     0 172.16.179.135:59723   103.237.168.15:http     TIME_WAIT
tcp       0     0 172.16.179.135:60244   no-ptr.as20860.net:http TIME_WAIT

ss (netstat)
ss command is a replacement for netstat. You can still use netstat command on all systems. Using ss command, you can get more information than netstat command. ss command is fast because it gets all the information from the kernel userspace. Now let’s have a look at few usages of ss command.
Listing all connections
The “ss” command will list all the TCP, UDP and Unix socket connections on your machine.

ubuntu@devopscube:~$ ss
Netid  State      Recv-Q Send-Q   Local Address:Port       Peer Address:Port
u_str  ESTAB                                * 7594                  * 
u_str  ESTAB                  @/com/ubuntu/upstart 7605                  *  
u_str  ESTAB                                * 29701                 * 
u_str  ESTAB                  /var/run/dbus/system_bus_socket 29702                 * 
tcp    ESTAB            400      172.31.18.184:ssh         1.22.167.31:61808
The output of ss command will be big so you can use ” ss | less ” command to make the output scrollable.
Filtering out TCP, UDP and Unix sockets
If you want to filter out TCP , UDP or UNIX socket details, use “-t” “-u” and “-x” flag with the “ss” command. It will show all the established connections to the specific ports. If you want to list both connected and listening ports using “a” with the specific flag as shown below.

ss -ta
ss -ua
ss -xa

List all listening ports
To list all the listening ports, use “-l” flag with ss command. To list specific TCP, UDP or UNIX socket, use “-t”, “-u” and “-x” flag with “-l” as shown below.
ubuntu@devopscube:~$ ss -lt
State      Recv-Q Send-Q      Local Address:Port          Peer Address:Port
LISTEN     0      128                     *:ssh                      *:*
LISTEN     0      50                     :::http-alt                 :::*
LISTEN     0      50                     :::55857                   :::*
LISTEN     0      128                    :::ssh                     :::*
LISTEN     0      50                     :::53285                   :::*
ubuntu@devopscube:~$ 

w
w prints a summary of the current activity on the system, including what each user is doing, and their processes. Also list the logged in users and system load average for the past 1, 5, and 15 minutes.
[root@localhost ~]# w
23:32:48 up 2:52, 2 users, load average: 0.51, 0.36, 0.19
USER     TTY       LOGIN@   IDLE   JCPU   PCPU WHAT
chandan :0       20:41   ?xdm?   7:07 0.13s gdm-session-worker [pam/gdm-password]
chandan pts/0     20:42   0.00s 0.23s 3.42s /usr/libexec/gnome-terminal-server

nmap
nmap is a one of the powerful commands, which checks the opened port on the server.
Usage example:
nmap $server_name

Enable/Disable Network Interface
You can enable or disable the network interface by using ifup/ifdown commands with ethernet interface parameter.
To enable eth0
#ifup eth0
To disable eth0
#ifdown eth0
ETHTOOL Command
ethtool is a replacement of mii-tool. It is to view, setting speed and duplex of your Network Interface Card (NIC). You can set duplex permanently in /etc/sysconfig/network-scripts/ifcfg-eth0 with ETHTOOL_OPTS variable.
# ethtool eth0
Settings for eth0:
Current message level: 0x00000007 (7)
Link detected: yes

iwconfig
Used to configure wireless network interface.
whois
Will tell you about the website's whois.
e.g. whois http://www.linuxandubuntu.com
GUI tool system-config-network
Type system-config-network in command prompt to configure network setting and you will get nice Graphical User Interface (GUI) which may also use to configure IP Address, Gateway, DNS etc. as shown below image.
# system-config-network
 
Tcpdump
Tcpdump captures packets off a network interface and interprets them for you. It can be used to save entire packets for later inspection.
